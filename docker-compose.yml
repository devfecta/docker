version: "3.8"
services:
  react:
    build: ./react
    ports:
      - "81:5000"
    networks:
      - frontend
    #deploy:
    #  replicas: 2
    #  update_config:
    #    parallelism: 2
    #    delay: 10s
    #  restart_policy:
    #    condition: on-failure
  mysql:
    image: mysql:latest
    volumes:
      - devfecta-mysql:/var/lib/mysql
    networks:
      - backend
    #deploy:
    #  placement:
    #    max_replicas_per_node: 1
    #    constraints:
    #      - "node.role==manager"

  php:
    image: dockersamples/examplevotingapp_vote:before
    ports:
      - "5000:80"
    networks:
      - backend
    depends_on:
      - react
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure

  result:
    image: dockersamples/examplevotingapp_result:before
    ports:
      - "5001:80"
    networks:
      - backend
    depends_on:
      - db
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  worker:
    image: dockersamples/examplevotingapp_worker
    networks:
      - frontend
      - backend
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=VOTING]
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - "node.role==manager"

networks:
  frontend:
  backend:

volumes:
  devfecta-react-php:
  devfecta-mysql: